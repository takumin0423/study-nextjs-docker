# Dockerfile for Development Environment

# マルチプラットフォーム対応のための変数定義
ARG NODE_VERSION=20
ARG PNPM_VERSION=10.11.0

# Node.js 20-alpine をベースイメージとして使用（slimよりもセキュアで軽量）
# マルチプラットフォームビルドをサポート
FROM --platform=$BUILDPLATFORM node:${NODE_VERSION}-alpine AS base

# セキュリティ向上のため非rootユーザーを作成
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 必要なシステムパッケージをインストール（開発に必要なツール含む）
RUN apk add --no-cache libc6-compat curl git

# 環境変数 PNPM_HOME を設定 (pnpm のインストール先)
ENV PNPM_HOME="/pnpm"
# 環境変数 PATH に PNPM_HOME を追加
ENV PATH="${PNPM_HOME}:${PATH}"
# corepack を有効化し、pnpmバージョンを固定
RUN corepack enable
RUN corepack prepare pnpm@${PNPM_VERSION} --activate

# 作業ディレクトリを /app に設定し、適切な権限を設定
WORKDIR /app
RUN chown nextjs:nodejs /app

# 非rootユーザーに切り替え（以降の処理を非rootで実行）
USER nextjs

# package.json と pnpm-lock.yaml を先にコピー（レイヤーキャッシュ最適化）
COPY --chown=nextjs:nodejs package.json pnpm-lock.yaml ./

# pnpm のキャッシュを利用して依存関係をフェッチ (開発用なので --prod は付けない)
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm fetch

# pnpm のキャッシュを利用して依存関係をインストール (lockfile に基づく)
# 開発用なので devDependencies も含めてインストールされる
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# 必要なディレクトリを作成（Turbopack用キャッシュ含む）
RUN mkdir -p .next/cache && mkdir -p public && mkdir -p .next/cache/turbopack

# 設定ファイルをコピー（所有者を指定してコピー）
COPY --chown=nextjs:nodejs next.config.ts tsconfig.json postcss.config.mjs eslint.config.mjs ./
COPY --chown=nextjs:nodejs drizzle.config.ts drizzle.config.local.ts ./

# ソースコードをコピー（所有者を指定してコピー）
COPY --chown=nextjs:nodejs src/ ./src/
COPY --chown=nextjs:nodejs public/ ./public/

# Drizzleマイグレーションファイルをコピー
COPY --chown=nextjs:nodejs drizzle/ ./drizzle/

# Node.js 環境を 'development' に設定
ENV NODE_ENV=development
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"
# Turbopack最適化のための環境変数
ENV TURBOPACK=1
ENV NEXT_TELEMETRY_DISABLED=1

# アプリケーションがリッスンするポートを指定 (Next.js 開発サーバーのデフォルト)
EXPOSE 3000

# ヘルスチェックを追加（開発環境用）
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# コンテナ起動時に実行するコマンド (Next.js 開発サーバーをTurbopackで起動)
CMD ["pnpm", "run", "dev"]
